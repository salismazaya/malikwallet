# Generated by Django 3.2.25 on 2024-09-22 17:28

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.crypto
import django.utils.timezone
import encrypted_model_fields.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('limit_per_day', models.PositiveBigIntegerField(default=20000, verbose_name='Limit Per Hari')),
                ('type', models.PositiveSmallIntegerField(choices=[(1, 'User'), (2, 'Merchant'), (3, 'Wali Santri')], default=1)),
                ('pay_daily', models.BooleanField(default=True, verbose_name='Bayar Listrik?')),
                ('nfc_id', models.CharField(blank=True, max_length=50, null=True, validators=[django.core.validators.RegexValidator(message='Format nfc id tidak valid', regex='^[a-fA-F0-9]+$')])),
                ('pin', encrypted_model_fields.fields.EncryptedCharField(blank=True, null=True, validators=[django.core.validators.RegexValidator(message='Format pin tidak valid', regex='^\\d{4,10}$')])),
                ('santri', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='main.customer')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Customer',
                'verbose_name_plural': 'Customer',
            },
        ),
        migrations.CreateModel(
            name='Data',
            fields=[
                ('id', models.PositiveSmallIntegerField(choices=[(1, 'Terakhir di Klaim'), (2, 'QR Whatsapp')], primary_key=True, serialize=False)),
                ('value', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='PPOBProduct',
            fields=[
                ('id', models.CharField(max_length=10, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('profit', models.PositiveBigIntegerField(default=1000)),
                ('enable', models.BooleanField(default=True, verbose_name='Aktif?')),
            ],
            options={
                'verbose_name': 'Produk PPOB',
                'verbose_name_plural': 'Produk PPOB',
            },
        ),
        migrations.CreateModel(
            name='PPOBProductWrapper',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('enable', models.BooleanField(default=True, verbose_name='Aktif?')),
            ],
            options={
                'verbose_name': 'Pembungkus Produk PPOB',
                'verbose_name_plural': 'Pembungkus Produk PPOB',
            },
        ),
        migrations.CreateModel(
            name='TransactionIn',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.PositiveBigIntegerField(verbose_name='Jumlah')),
                ('caption', models.TextField()),
                ('time', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Waktu')),
            ],
            options={
                'verbose_name': 'Transaksi Masuk Kas',
                'verbose_name_plural': 'Transaksi Masuk Kas',
            },
        ),
        migrations.CreateModel(
            name='MerchantToken',
            fields=[
                ('id', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='main.customer')),
                ('token', encrypted_model_fields.fields.EncryptedCharField(default=django.utils.crypto.get_random_string, unique=True)),
                ('token_hashed', models.CharField(editable=False, max_length=64, null=True)),
            ],
            options={
                'verbose_name': 'Token Warung',
                'verbose_name_plural': 'Token Warung',
            },
        ),
        migrations.CreateModel(
            name='TransferUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.PositiveBigIntegerField(verbose_name='Jumlah')),
                ('from_customer', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='skasep', to='main.customer', verbose_name='Dari Customer')),
                ('to_customer', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='sganteng', to='main.customer', verbose_name='Ke Customer')),
            ],
            options={
                'verbose_name': 'Transaksi User',
                'verbose_name_plural': 'Transaksi User',
            },
        ),
        migrations.CreateModel(
            name='Transaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.PositiveBigIntegerField(verbose_name='Total')),
                ('from_customer', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='skeren', to='main.customer', verbose_name='Dari')),
                ('to_customer', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='smantap', to='main.customer', verbose_name='Ke')),
            ],
            options={
                'verbose_name': 'Transaksi Warung',
                'verbose_name_plural': 'Transaksi Warung',
            },
        ),
        migrations.CreateModel(
            name='RequestDeposit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Waktu')),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.customer')),
            ],
            options={
                'verbose_name': 'Permintaan Deposit',
                'verbose_name_plural': 'Permintaan Deposit',
            },
        ),
        migrations.CreateModel(
            name='PPOBTransaction',
            fields=[
                ('id', models.CharField(default=django.utils.crypto.get_random_string, max_length=12, primary_key=True, serialize=False)),
                ('unique', models.CharField(editable=False, max_length=12, unique=True)),
                ('target', encrypted_model_fields.fields.EncryptedCharField()),
                ('status', models.PositiveSmallIntegerField(choices=[(1, 'PENDING'), (2, 'GAGAL'), (3, 'SUKSES')], default=1)),
                ('sn', encrypted_model_fields.fields.EncryptedCharField(blank=True, null=True)),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='main.customer')),
                ('product', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='main.ppobproduct', verbose_name='Produk')),
            ],
            options={
                'verbose_name': 'Transaksi PPOB',
                'verbose_name_plural': 'Transaksi PPOB',
            },
        ),
        migrations.AddField(
            model_name='ppobproduct',
            name='wrapper',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.ppobproductwrapper'),
        ),
        migrations.CreateModel(
            name='ParrentTransaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('child_transaction_id', models.CharField(blank=True, max_length=12, null=True)),
                ('amount', models.BigIntegerField(verbose_name='Jumlah')),
                ('caption', models.TextField(blank=True, null=True)),
                ('type', models.PositiveSmallIntegerField(choices=[(1, 'Transaksi Warung'), (2, 'Transaksi PPOB'), (3, 'Transaksi Transfer'), (4, 'Transaksi Deposit'), (5, 'Transaksi Dibakar'), (6, 'Transkasi Ditarik')])),
                ('time', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Waktu')),
                ('enable', models.BooleanField(default=True, editable=False, verbose_name='Aktif?')),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='main.customer')),
            ],
            options={
                'verbose_name': 'Transaksi',
                'verbose_name_plural': 'Transaksi',
            },
        ),
        migrations.CreateModel(
            name='Deposit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.PositiveBigIntegerField(verbose_name='Jumlah')),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='main.customer')),
            ],
            options={
                'verbose_name': 'Deposit',
                'verbose_name_plural': 'Deposit',
            },
        ),
        migrations.AddConstraint(
            model_name='parrenttransaction',
            constraint=models.CheckConstraint(check=models.Q(models.Q(('type', 5), ('amount__lt', 0)), models.Q(('type', 6), ('amount__lt', 0)), models.Q(models.Q(('type', 5), ('type', 6), _connector='OR'), _negated=True), _connector='OR'), name='check_amount_must_negative'),
        ),
        migrations.AddConstraint(
            model_name='parrenttransaction',
            constraint=models.CheckConstraint(check=models.Q(models.Q(('type', 5), ('child_transaction_id__isnull', True)), models.Q(('type', 6), ('child_transaction_id__isnull', True)), models.Q(models.Q(('type', 5), ('type', 6), _connector='OR'), _negated=True), _connector='OR'), name='check_child_transacation_id_must_null'),
        ),
        migrations.AddConstraint(
            model_name='customer',
            constraint=models.CheckConstraint(check=models.Q(('santri__isnull', True), models.Q(('santri__isnull', False), ('type', 3)), _connector='OR'), name='check_wali'),
        ),
    ]
